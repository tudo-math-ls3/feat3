#!/bin/sh
#
# Copy or link this file as ".git/hooks/pre-commit".

die() {
	echo 'pre-commit hook failure' 1>&2
	echo '-----------------------' 1>&2
	echo '' 1>&2
	echo "$@" 1>&2
	exit 1
}

#-----------------------------------------------------------------------------
# Check for committer identity.
advice='
Use the commands

	git config --global user.name '\''Your Name'\''
	git config --global user.email '\''you@yourdomain.com'\''

to introduce yourself to Git before committing.'

# Ensure name and email are available.
git config --get user.name > /dev/null &&
git config --get user.email > /dev/null ||
die 'Identity not configured!' "$advice"

# Validate the name and email.
git config --get user.name | grep ' ' > /dev/null ||
die 'Set user.name to your Real Name (with a space), not a userid.' "$advice"
git config --get user.email | grep '^[^@]*@[^@]*$' > /dev/null ||
die 'Set user.email to an email address (userid@validdomain.com).' "$advice"

#-----------------------------------------------------------------------------
# Check content that will be added by this commit.

if git rev-parse --verify -q HEAD > /dev/null; then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Disallow non-ascii file names.  The printable range starts at the
# space character and ends with tilde.
if test "$(git diff --cached --name-only --diff-filter=A -z $against |
	   LC_ALL=C tr -d '[ -~]\0')"; then
	die 'Non-ascii file names may not be added:
'"$(git diff --cached --name-only --diff-filter=A $against)"
fi

# Builtin whitespace checks.
bad=$(git diff-index --check --cached $against --) || die "$bad"

# Reject leading TABs.
check_tab() {
	git diff-index -p --cached $against -- "$1" |
	grep '^+	' > /dev/null &&
	echo "  $1"
}
bad=$(git diff-index --name-only --cached $against -- |
while read file; do
	case "$file" in
		*.c)		check_tab "$file" ;;
		*.h)		check_tab "$file" ;;
		*.cxx)		check_tab "$file" ;;
		*.txx)		check_tab "$file" ;;
		*.hxx)		check_tab "$file" ;;
		*.htm)		check_tab "$file" ;;
		*.html)		check_tab "$file" ;;
		*.txt)		check_tab "$file" ;;
		*.cmake)	check_tab "$file" ;;
	esac
done)
test -z "$bad" || die 'Leading TABs added in
'"$bad"'
Convert them to spaces (2 per TAB) before commit.'
